name: Build

on: push

env:
  REGISTRY: 
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: echo Using node version $(node --version)
    - run: echo Using npm version $(npm --version)
    - run: cp .env.example .env
    - run: cp test/data/interactivityType.ttl data/

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list

    - run: npm install
    - run: npm run build --if-present
    - run: npm run test:coverage
    - name: Generating coverage badges
      uses: jpb06/jest-badges-action@latest
      with:
        branches: master,dev,233-tests

  docker:
    needs: [build]
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: skohub/skohub-vocabs-docker
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test docker image
        run: |
          mkdir public
          mkdir data
          cp .env.example .env
          cp test/data/interactivityType.ttl data/
          docker run --rm -v $(pwd)/public:/app/public -v $(pwd)/data:/app/data -v $(pwd)/.env:/app/.env ${{ env.TEST_TAG }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
